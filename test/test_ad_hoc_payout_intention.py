# coding: utf-8

"""
    trivium-cash

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.2.8.dev0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from trivium_python_sdk.models.ad_hoc_payout_intention import AdHocPayoutIntention

class TestAdHocPayoutIntention(unittest.TestCase):
    """AdHocPayoutIntention unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdHocPayoutIntention:
        """Test AdHocPayoutIntention
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdHocPayoutIntention`
        """
        model = AdHocPayoutIntention()
        if include_optional:
            return AdHocPayoutIntention(
                from_account_id = '',
                quote = trivium_python_sdk.models.quote_details.QuoteDetails(
                    sell_currency = '', 
                    buy_currency = '', 
                    fixed_side = 'Buy', 
                    amount = 1.337, 
                    recipient_bank_country = '', 
                    charge_type = 'OURS', ),
                beneficiary = None,
                bank_account_details = trivium_python_sdk.models.bank_account_details.BankAccountDetails(
                    payment_type = 'Fast', 
                    currency = '', 
                    bank_name = '', 
                    bank_account_holder_name = '', 
                    bank_account_number = '', 
                    bank_country_code = '', 
                    routing_code_type1 = 'ABA', 
                    routing_code_value1 = '', 
                    routing_code_type2 = 'ABA', 
                    routing_code_value2 = '', ),
                type = 'AdHocPayoutIntention'
            )
        else:
            return AdHocPayoutIntention(
                from_account_id = '',
                quote = trivium_python_sdk.models.quote_details.QuoteDetails(
                    sell_currency = '', 
                    buy_currency = '', 
                    fixed_side = 'Buy', 
                    amount = 1.337, 
                    recipient_bank_country = '', 
                    charge_type = 'OURS', ),
                beneficiary = None,
                bank_account_details = trivium_python_sdk.models.bank_account_details.BankAccountDetails(
                    payment_type = 'Fast', 
                    currency = '', 
                    bank_name = '', 
                    bank_account_holder_name = '', 
                    bank_account_number = '', 
                    bank_country_code = '', 
                    routing_code_type1 = 'ABA', 
                    routing_code_value1 = '', 
                    routing_code_type2 = 'ABA', 
                    routing_code_value2 = '', ),
                type = 'AdHocPayoutIntention',
        )
        """

    def testAdHocPayoutIntention(self):
        """Test AdHocPayoutIntention"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
